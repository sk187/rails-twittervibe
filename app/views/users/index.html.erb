<div class="inner cover">
   	   	
</div>

<% if !user_signed_in? %>
<div>
<%= image_tag("live-long-and-prosper.jpg", :class => "home_page_image") %>
</div>
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#signIn">Come Back Mr. Spock</button>
<% end %>
<div id="container-chart">
</div>

<!-- Modal -->
<div class="modal fade" id="about" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-backdrop="static">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="myModalLabel">What is Twitter Vibe?</h4>

      </div>
      <div class="modal-body">
        <p>Twitter Vibe is a Twitter sentiment analysis application that assigns a positive / negative score to your tweets with a lexicon library called AFINN.  </p>
        <br>
        <p> The results are graphed on an area chart with a line graph representing the average score for the given day </p>
        <br>
        <p>The green area shows the range of your most positive tweets while the red shows the range of your most negative tweets.</p> 
        <br>
        <p> The blue line that contained within the two shaded areas is the average score of all your tweets in a given day. </p>


      </div>
      <div class="modal-footer">
        <% if !user_signed_in? %>
        <button type="button" class="btn btn-success"><%= link_to "Tweet me up Scotty!", user_omniauth_authorize_path(:twitter)%></button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">Meh, ok</button>
        <%else%>
            <button type="button" class="btn btn-success" data-dismiss="modal"> Got it Captain Kirk </button>
        <%end%>
      </div>
    </div>
  </div>
</div>
<!-- End of Modal -->

<% if user_signed_in? %>
	<div id="range_nav">
		<form>
			Start Date
			<input type="date" id="start_date">
			End Date
			<input type="date" id="end_date">
			<button id="range" class="btn btn-success"><span class="glyphicon glyphicon-ok"></span></button>
			<%= button_to 'Analyze Older Tweets', new_user_tweet_path(:user_id => @id), :method => :get, class: "btn btn-primary" %>
		</form>
	</div>
<%end%>
<!-- <a class="twitter-timeline" 
href="https://twitter.com/Quant_LIfe" 
data-widget-id="571770754627555328"
>Tweets by @Quant_LIfe</a>
<script>!function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.creaidentiteElement(s);js.id=id;js.src=p+"://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
</script>-->

<div class="mastfoot">
	<div class="inner">
  		<p> Twitter Vibe by Sung Kim </p>
	</div>  	
</div>



<script>
//Makes AJAX call for User Tweets
function userTweets(userId) {


	var points_url = window.location.origin + "/users/" + userId + "/scoreboards.json";

	$.ajax({
		type: "GET",
		url: points_url,
		dataType: "json",
		success: function(points){
			graphTweets(points);

		},
		error: function(){
			alert('AJAX call for Points has failed');
		}
	});
};

	var ranges = [];
	var averages = []; 

function graphTweets(points){

	_.each(points, function(point, i){
		var	datetime = parseInt(point["datetime"]);
		var minscore = parseInt(point["minscore"]);
		var maxscore = parseInt(point["maxscore"]);
		var avgscore = parseInt(point["avgscore"]);
		var newrange = []
		var newaverage = []
		newrange.push(datetime, minscore, maxscore)
		newaverage.push(datetime, avgscore)
		ranges.push(newrange)
		averages.push(newaverage)	
	})

    $('#container-chart').highcharts({
        title: {
            text: 'Your Tweet Vibes'
        },

        chart: {
        	borderRadius: 20,
        	// plotBackgroundColor: "#BAB3B2"
        },

        credits: {
        	enabled: false
        },

        xAxis: {
            type: 'datetime'
        },

        yAxis: {
            title: {
                text: 'Sentiment'
            }
        },

        tooltip: {
            crosshairs: true,
            shared: true,
            valueSuffix: ''
        },

        series: [{
            name: 'Average',
            data: averages,
            zIndex: 1,
            marker: {
                fillColor: 'white',
                lineWidth: 2,
                lineColor: Highcharts.getOptions().colors[0]
            }
        }, {
            name: 'Range',
            data: ranges,
            type: 'arearange',
            color: "#66CD00",
            negativeColor: "#FF0000",
            lineWidth: 0,
            linkedTo: ':previous',
            fillOpacity: 0.3,
            zIndex: 0
        }]
    });
}

<% if user_signed_in? %>
userTweets(<%=current_user.id%>);
<% end %>

//Listener for Range Button
$('#range').click(function(event){
	event.preventDefault();

	<% if user_signed_in? %>
	var userId = <%=current_user.id%>
	<% end %>

	var points_url = window.location.origin + "/users/" + userId + "/scoreboards.json";

	$.ajax({
		type: "GET",
		url: points_url,
		dataType: "json",
		success: function(points){
			graphFilteredTweets(points);

		},
		error: function(){
			alert('AJAX call for Points has failed');
		}
	});
})

 
function graphFilteredTweets(points){
	var ranges = [];
	var averages = [];
	var startDate = $('#start_date').val().split("-");
	var endDate = $('#end_date').val().split("-");
	var sMonth= startDate[1];
	var sDay= startDate[2];
	var sYear = startDate[0];
	var eMonth = endDate[1];
	var eYear = endDate[0];
	var eDay= endDate[2];
	var sCombined = sYear+sMonth+sDay;
	var eCombined = eYear+eMonth+eDay;

	var formattedStartDate = parseInt(sCombined);
	var formattedEndDate = parseInt(eCombined);
	
	_.each(points, function(point, i){
		var	datetime = parseInt(point["datetime"]);
		var minscore = parseInt(point["minscore"]);
		var maxscore = parseInt(point["maxscore"]);
		var avgscore = parseInt(point["avgscore"]);
		var reference_date = point["reference_date"];
		var dateInt = parseInt(reference_date);

		var newrange = []
		var newaverage = []
		// console.log("dateint: " + dateInt)
		// console.log("Start Time: "+ formattedStartDate)
		// console.log("End Time: "+ formattedEndDate)



		if (dateInt >= formattedStartDate && dateInt <= formattedEndDate){
			newrange.push(datetime, minscore, maxscore)
			newaverage.push(datetime, avgscore)
			ranges.push(newrange)
			averages.push(newaverage)
		}
	})
		// console.log("Ranges are: " + ranges)
		// console.log("Ranges are: " + ranges.length +" long")
		// console.log("Averages are: " + averages)
		// console.log("Averages are: " + averages.length +" long")



	$('#container-chart').highcharts({
        title: {
            text: 'Your Tweet Vibes'
        },

        chart: {
        	borderRadius: 20,
        	// plotBackgroundColor: "#BAB3B2"
        },

        credits: {
        	enabled: false
        },

        xAxis: {
            type: 'datetime'
        },

        yAxis: {
            title: {
                text: 'Sentiment'
            }
        },

        tooltip: {
            crosshairs: true,
            shared: true,
            valueSuffix: ''
        },

        series: [{
            name: 'Average',
            data: averages,
            zIndex: 1,
            marker: {
                fillColor: 'white',
                lineWidth: 2,
                lineColor: Highcharts.getOptions().colors[0]
            }
        }, {
            name: 'Range',
            data: ranges,
            type: 'arearange',
            color: "#66CD00",
            negativeColor: "#FF0000",
            lineWidth: 0,
            linkedTo: ':previous',
            fillOpacity: 0.3,
            zIndex: 0
        }]
    });
}

</script>








